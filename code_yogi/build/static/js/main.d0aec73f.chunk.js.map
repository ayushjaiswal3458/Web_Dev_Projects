{"version":3,"sources":["components/Sidebar.tsx","pages/Dashboard.page.tsx","pages/Lecture.page.tsx","pages/Recording.page.tsx","pages/AppContainer.page.tsx","shield.webp","components/AuthHero.tsx","pages/Login.page.tsx","pages/Signup.page.tsx","pages/Auth.page.tsx","pages/NotFound.page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Sidebar","props","className","defaultProps","memo","Dashboard","to","Lecture","useParams","lectureNumber","batchNumber","Recordings","AppContainer","path","AuthHero","console","log","useEffect","src","Auth","Login","useState","email","password","data","setData","touched","setTouched","submitting","setSubmitting","history","useHistory","handleChange","event","nameOfChangeInput","target","name","value","handleBlur","nameOfBlurInput","emailError","passwordError","endsWith","length","onSubmit","preventDefault","setTimeout","push","htmlFor","id","type","autoComplete","required","onChange","onBlur","placeholder","Signup","NotFound","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0aec73f.chunk.js","sourcesContent":["\r\nimport {FC, memo } from \"react\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst Sidebar: FC<Props> = (props) => {\r\n    return (\r\n        <div className=\"h-screen bg-gray-300 w-80 \">\r\n            This is a sidebar\r\n        </div>\r\n    );\r\n};\r\n    \r\nSidebar.defaultProps = {\r\n\r\n}    \r\n\r\n    \r\nexport default memo(Sidebar);","import React from \"react\";\r\nimport {FC, memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst Dashboard: FC<Props> = (props) => {\r\n    return (\r\n        <div>\r\n            This is a dashboard <Link to=\"/recording\"><span className=\"text-indigo-400 hover:underline\">Got to Recordings</span></Link>\r\n        </div>\r\n    );\r\n};\r\n    \r\nDashboard.defaultProps = {\r\n\r\n}    \r\n\r\n    \r\nexport default memo(Dashboard);","import React from \"react\";\r\nimport {FC, memo } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst Lecture: FC<Props> = (props) => {\r\n\r\n    const { lectureNumber , batchNumber} = useParams<any>();\r\n\r\n    return (\r\n        <div>\r\n            Showing data of lecture #{lectureNumber} of batch #{batchNumber}\r\n        </div>\r\n    );\r\n};\r\n    \r\nLecture.defaultProps = {\r\n\r\n}    \r\n\r\n    \r\nexport default memo(Lecture);","\r\nimport {FC, memo } from \"react\";\r\n\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst Recordings: FC<Props> = (props) => {\r\n    return (\r\n        <div>\r\n            This is recording page \r\n        </div>\r\n    );\r\n};\r\n    \r\nRecordings.defaultProps = {\r\n\r\n}    \r\n\r\n    \r\nexport default memo(Recordings);","\r\nimport { FC, memo } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport DashboardPage from \"./Dashboard.page\";\r\nimport LecturePage from \"./Lecture.page\";\r\nimport RecordingPage from \"./Recording.page\";\r\n\r\ninterface Props {}\r\n\r\nconst AppContainer: FC<Props> = (props) => {\r\n  return (\r\n    <div className=\"flex \">\r\n      <Sidebar />\r\n      <Switch>\r\n        <Route path=\"/recording\">\r\n          <RecordingPage />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <DashboardPage />\r\n        </Route>\r\n        <Route path=\"/batch/:batchNumber/lecture/:lectureNumber\">\r\n            <LecturePage />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nAppContainer.defaultProps = {};\r\n\r\nexport default memo(AppContainer);\r\n","export default __webpack_public_path__ + \"static/media/shield.3e23331c.webp\";","\r\nimport { useEffect } from \"react\";\r\nimport {FC, memo } from \"react\";\r\nimport Auth from \"../shield.webp\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst AuthHero: FC<Props> = (props) => {\r\n    console.log(\"authpage rendering\");\r\n    useEffect(() => {\r\n        console.log(\"authpage rendering for the first time\");\r\n    })\r\n    return (\r\n        <div className=\"hidden w-1/2 h-screen Auth:inline bg-AuthHero \">\r\n            <img src={Auth} className=\"object-cover mx-auto my-24 h-96 w-96\" />\r\n            \r\n        </div>\r\n    );\r\n};\r\n    \r\nAuthHero.defaultProps = {\r\n\r\n}    \r\n\r\n    \r\nexport default memo(AuthHero);","import React, { useState } from \"react\";\r\nimport { FC, memo } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { setTimeout } from \"timers\";\r\nimport { FiUser } from \"react-icons/fi\";\r\nimport { FiLock } from \"react-icons/fi\";\r\n\r\ninterface Props {}\r\n\r\nconst Login: FC<Props> = (props) => {\r\n  const [data, setData] = useState({ email: \"\", password: \"\" });\r\n  const [touched, setTouched] = useState({ email: false, password: false });\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const nameOfChangeInput = event.target.name;\r\n    setData({ ...data, [nameOfChangeInput]: event.target.value });\r\n  };\r\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    const nameOfBlurInput = event.target.name;\r\n    setTouched({ ...touched, [nameOfBlurInput]: true });\r\n  };\r\n\r\n  let emailError = \"\";\r\n  let passwordError = \"\";\r\n\r\n  if (!data.email) {\r\n    emailError = \"Email address is required\";\r\n  } else if (!data.email.endsWith(\"@gmail.com\")) {\r\n    emailError = \"please enter a valid email address\";\r\n  }\r\n  if (!data.password) {\r\n    passwordError = \"Password is required\";\r\n  } else if (data.password.length < 8) {\r\n    passwordError = \"please enter atleast 8 characters\";\r\n  }\r\n\r\n  return (\r\n    <div className=\" font-body text-grayish py-2.8715 px-11.4285 mx-auto w-97.1485 h-148.8985 \">\r\n      <div >\r\n        <h1 className=\"mb-2 font-medium whitespace-nowrap text-Login\">\r\n          Log in to <span className=\" text-indigoish\">CodeYogi</span>\r\n        </h1>\r\n        <div className=\"mb-1 space-x-2 text-sm mb-12.5 whitespace-nowrap\">\r\n          <span className=\"tracking-wider \">New Here?</span>\r\n          <Link to=\"/signup\">\r\n            <span className=\"tracking-widest underline text-indigoish\">\r\n              Create an account\r\n            </span>\r\n          </Link>\r\n\r\n          <Link to=\"/dashboard\">\r\n            <span className=\"tracking-widest underline text-indigoish\">\r\n              Go to Dashboard\r\n            </span>\r\n          </Link>\r\n        </div>\r\n        <form\r\n          className=\"space-y-4 \"\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n            if (emailError || passwordError) {\r\n              console.log(\"form rejected\");\r\n              return;\r\n            }\r\n            setSubmitting(true);\r\n            console.log(\"login started with\", data);\r\n            setTimeout(() => {\r\n              console.log(\"login succesfull\");\r\n              history.push(\"/dashboard\");\r\n            }, 5000);\r\n          }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"relative pt-2.75 pb-6.25\">\r\n            \r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n          <FiUser className=\"absolute w-6 h-6 text-indigoish\" />\r\n\r\n              <input\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className=\"w-full pb-2 pl-8 placeholder-gray-400 border-b-2 outline-none focus:border-indigoish\"\r\n                placeholder=\"Email address\"\r\n              ></input>\r\n              {touched.email && (\r\n                <div className=\"text-red-500\">{emailError}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"pt-2.75 pb-6.25 mb-2 \">\r\n              <FiLock className=\"absolute w-6 h-6 text-indigoish\" />\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                className=\"w-full pb-2 pl-8 placeholder-gray-400 border-b-2 outline-none focus:border-indigoish\"\r\n                placeholder=\"Password\"\r\n              ></input>\r\n              {touched.password && (\r\n                <div className=\"text-red-500\">{passwordError}</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <p>Show password</p>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"text-white rounded-md  px-5 py-1.75  text-sm bg-indigoish shadow-xl hover:transform\"\r\n            >\r\n              Log In\r\n            </button>\r\n            {submitting && <ImSpinner9 className=\"animate-spin\" />}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.defaultProps = {};\r\n\r\nexport default memo(Login);\r\n","\r\nimport { FC, memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\ninterface Props {}\r\n\r\nconst Signup: FC<Props> = (props) => {\r\n  return (\r\n    <div className=\"flex justify-between\">\r\n    <div>\r\n      Already have an account{\" \"}\r\n      <Link to=\"/login\">\r\n        <span className=\"text-indigo-400 hover:underline\">click here</span>\r\n      </Link>\r\n    </div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nSignup.defaultProps = {};\r\n\r\nexport default memo(Signup);\r\n","\r\nimport {FC, memo } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AuthHero from \"../components/AuthHero\";\r\nimport LoginPage from \"./Login.page\";\r\nimport SignupPage from \"./Signup.page\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst Auth: FC<Props> = (props) => (\r\n    <div className=\"flex \">\r\n        <div className=\"w-1/2\">\r\n        <Switch>\r\n            <Route path=\"/login\">\r\n                <LoginPage />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n                <SignupPage />\r\n            </Route>\r\n        </Switch>\r\n        </div>\r\n        <AuthHero />\r\n    </div>\r\n);\r\n    \r\nAuth.defaultProps = {\r\n\r\n}    \r\n\r\n    \r\nexport default memo(Auth);","\r\nimport {FC, memo } from \"react\";\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst NotFound: FC<Props> = (props) => {\r\n    return (\r\n        <div className=\"w-screen h-screen bg-red-400\">\r\n            Sorry page not not available.\r\n        </div>\r\n    );\r\n};\r\n    \r\nNotFound.defaultProps = {\r\n\r\n}    \r\n\r\n    \r\nexport default memo(NotFound);","\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport AppContainerPage from \"./pages/AppContainer.page\";\nimport AuthPage from \"./pages/Auth.page\";\n\nimport NotFoundPage from \"./pages/NotFound.page\";\n\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n      <Route path=\"/\" exact>\n          <Redirect to=\"/login\" ></Redirect>\n        </Route>\n        <Route path={[\"/login\",\"/signup\"]} exact>\n          <AuthPage />\n        </Route>\n         <Route path={[\"/dashboard\",\"/recording\",\"/batch/:batchNumber/lecture/:lectureNumber\"]}  > \n         <AppContainerPage />\n         </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}